include "sys";
include "alloc.ba";

void WritePtr(void* ptr) {
	u8[16] hex = { '0', '1', '2', '3', '4', '5', '6', '7', 
				   '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', };
	u8[16] digits = { '0', '0', '0', '0', '0', '0', '0', '0',
					  '0', '0', '0', '0', '0', '0', '0', '0', };
	i64 i = 16;
	while --i >= 0 {
		[digits, i] = [hex, ptr & 0xf];
		ptr >>= 4~void*;
	}
	"0x";
	Write(&digits, $digits);
}

void WriteAllocInfo(void* ptr) {
	"size: ";
	write [ptr~u64*, -2]; 
	", allocated: ";
	write [ptr~u64*, -1];
	", address: ";
	WritePtr(ptr); "\n";
}

u8* x = Alloc($u8, 100);
"Alloc\n";
WriteAllocInfo(x);

Free(x);
"Free\n";
WriteAllocInfo(x);

x = Alloc($u8, 1000);
"Alloc\n";
WriteAllocInfo(x);

Free(x);
"Free\n";
WriteAllocInfo(x);

x = Alloc($u8, 250);
"Alloc\n";
WriteAllocInfo(x);

Free(x);
"Free\n";
WriteAllocInfo(x);

x = Alloc($u8, 1000000);
"Alloc\n";
WriteAllocInfo(x);

Free(x);
"Free\n";
WriteAllocInfo(x); # segfaults because the memory is unmapped

