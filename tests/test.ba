include "alloc.ba";

void WriteAllocInfo(void* ptr) {
	u64 size = [ptr~u64*, -2];
	f"size: %u{size}, footer: %u{[(ptr + size)~u64*]}, "
	f"allocated: %u{[ptr~u64*, -1]}, address: 0x%x{ptr}\n";
}

u8* x = Alloc($u8, 100);
"Alloc x\n";
WriteAllocInfo(x);

Free(x);
"Free x\n";
WriteAllocInfo(x);

x = Alloc($u8, 1000);
"Alloc x\n";
WriteAllocInfo(x);

Free(x);
"Free x\n";
WriteAllocInfo(x);

x = Alloc($u8, 250);
"Alloc x\n";
WriteAllocInfo(x);

Free(x);
"Free x\n";
WriteAllocInfo(x);

x = Alloc($u8, 1000000);
"Alloc x\n";
WriteAllocInfo(x);

Free(x);
"Free x\n";
#WriteAllocInfo(x); # segfaults because the memory is unmapped

x = Alloc($u8, 200);
"Alloc x\n";
WriteAllocInfo(x);

u8* y = Alloc($u8, 300);
"Alloc y\n";
WriteAllocInfo(y);

Free(y);
"Free y\n";
WriteAllocInfo(y);

x = Realloc(x, $u8, 400);
"Realloc x\n";
WriteAllocInfo(x);

x = Realloc(x, $u8, 1000000);
"Realloc x\n";
WriteAllocInfo(x);

Free(x);
"Free x\n";
#WriteAllocInfo(x); # segfaults because the memory is unmapped

